package main

package main

import (
	"fmt"
	"math/rand"
	"sync"
	"time"
)

func DoWork() int {
	time.Sleep(time.Second)
	return rand.Intn(100) 
}

func main() {
	
	dataChan := make(chan int)

 	go func ()  {

		wg := sync.WaitGroup{}

		for i := 0 ; i < 1000 ; i++ {


			wg.Add(1)
			
			go func() {	
				defer wg.Done()					// we need to track when go routines are done 
				res := DoWork()
				dataChan <- res
			}()
			
		}

		wg.Wait()
		close(dataChan)
	}()

	
	for n := range dataChan {
		fmt.Println(n)
	}


}