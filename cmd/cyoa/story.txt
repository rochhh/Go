package cyoa

import (
	"encoding/json"
	"html/template"
	"io"
	"log"
	"net/http"
)

type Option struct {
	Text string `json:"text"`
	Chapter string `json:"arc"`
} 


type Chapter struct {
	Title string `json:"title"`
	Paragraphs []string `json:"story"`
	Options []Option `json:"options"`
}

type Story map[string]Chapter


func JsonStory(r io.Reader) (Story , error){
	
	d := json.NewDecoder(r)
	var story Story
	if err := d.Decode(&story) ; err != nil {
		return nil , err
	}
	return story , nil
}


func NewHandler( data Story ) http.Handler {
	fn := func ( w http.ResponseWriter , r *http.Request ) {

		path := r.URL.Path

		if path == "" || path == "/"{
			path = "/intro"
		}

		path = path[1:]


		t , err := template.ParseFiles("index.html")

		if err != nil {
			log.Fatal(err)
		}

		t.Execute(w , data )

	}

	return http.HandlerFunc(fn)
}